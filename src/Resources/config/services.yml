services:
#    _instanceof:
#        Contao\CoreBundle\Framework\FrameworkAwareInterface:
#            calls:
#                - ["setFramework", ["@contao.framework"]]

#        Symfony\Component\DependencyInjection\ContainerAwareInterface:
#            calls:
#                - ["setContainer", ["@service_container"]]

    _defaults:
        autoconfigure: true
        autowire: true
        public: true


    # config
    iido.core.config:
        class: IIDO\CoreBundle\Config\IIDOConfig
        arguments:
            - '@iido.core.util.basic'


    # utils
    iido.core.util.basic:
        class: IIDO\CoreBundle\Util\BasicUtil

    iido.core.util.company:
        class: IIDO\CoreBundle\Util\CompanyUtil

    iido.core.util.content:
        class: IIDO\CoreBundle\Util\ContentUtil

    iido.core.util.text:
        class: IIDO\CoreBundle\Util\TextUtil

    iido.core.util.styles:
        class: IIDO\CoreBundle\Util\StylesUtil
        arguments:
            - '@iido.core.util.basic'
            - '@iido.core.util.color'
            - '@doctrine.orm.entity_manager'

    iido.core.util.page:
        class: IIDO\CoreBundle\Util\PageUtil
        arguments:
            - '@iido.core.util.basic'

    iido.core.util.color:
        class: IIDO\CoreBundle\Util\ColorUtil
        arguments:
            - '@doctrine.orm.entity_manager'



    # pages
    IIDO\CoreBundle\Controller\Page\GlobalElementPageController: ~



    # backend controller
    IIDO\CoreBundle\Controller\Backend\WebsiteSettingsController:
        calls:
            - [setContainer, ['@service_container']]

    IIDO\CoreBundle\Controller\Backend\CompanyController:
        calls:
            - [ setContainer, [ '@service_container' ] ]



    # frontend ajax controller
    IIDO\CoreBundle\Controller\Frontend\AjaxController:
        calls:
            - [ setContainer, [ '@service_container' ] ]


    # entity
#    IIDO\CoreBundle\Entity\ThemeDesignerEntity: ~

    # repository
    IIDO\CoreBundle\Repository\ThemeDesignerRepository:
        tags:
            - { name: doctrine.repository_service }

    IIDO\CoreBundle\Repository\WebsiteColorRepository:
        tags:
            - { name: doctrine.repository_service }

    IIDO\CoreBundle\Repository\WebsiteFontRepository:
        tags:
            - { name: doctrine.repository_service }

    IIDO\CoreBundle\Repository\WebsiteSizeRepository:
        tags:
            - { name: doctrine.repository_service }


    # model
#    IIDO\CoreBundle\Model\ThemeDesignerModel: ~


    # twig
    IIDO\CoreBundle\Twig\TwigTemplatesExtension:
        public: false
        tags:
            - { name: twig.extension }


    # classes
    iido.core.website-settings.settings:
        class: IIDO\CoreBundle\Backend\WebsiteSettings

    iido.core.website-settings.themeDesigner:
        class: IIDO\CoreBundle\Backend\ThemeDesigner


    # event listener
    IIDO\CoreBundle\EventListener\BackendMenuListener:
        arguments:
            - "@router"
            - "@request_stack"

    IIDO\CoreBundle\EventListener\FilterPageTypeListener:
        arguments:
            - "@database_connection"

    IIDO\CoreBundle\EventListener\AjaxListener:
        arguments:
            - "@monolog.logger.contao"
            - "@contao.framework"

    IIDO\CoreBundle\EventListener\PageListener:
        arguments:
            - '@iido.core.util.page'

    IIDO\CoreBundle\EventListener\FrontendTemplateListener:
        arguments:
            - '@iido.core.util.styles'

    IIDO\CoreBundle\EventListener\BackendTemplateListener: ~
    IIDO\CoreBundle\EventListener\InsertTagsListener: ~
    IIDO\CoreBundle\EventListener\ArticleListener: ~
    IIDO\CoreBundle\EventListener\ContentListener:
        arguments:
            - '@iido.core.util.content'
            - '@iido.core.util.page'


    # dca tables listener
    IIDO\CoreBundle\EventListener\DataContainer\CoreSettingsListener: ~

    IIDO\CoreBundle\EventListener\DataContainer\ContentListener:
        arguments:
            - '@request_stack'

    IIDO\CoreBundle\EventListener\DataContainer\ArticleListener:
        arguments:
            - '@iido.core.util.color'
            - '@request_stack'

    IIDO\CoreBundle\EventListener\DataContainer\PageListener:
        arguments:
            - '@request_stack'


    # event subscriber
    IIDO\CoreBundle\EventSubscriber\KernelRequestSubscriber:
        arguments:
            - "@contao.routing.scope_matcher"


    # service
    iido.core.service.file_uploader:
        class: IIDO\CoreBundle\Services\FileUploader


    # permission checker
    iido.core.backend.permission_checker:
        class: IIDO\CoreBundle\Permission\BackendPermissionChecker
        public: true
        arguments:
            - "@database_connection"
            - "@security.token_storage"
            - "@iido.core.config"
